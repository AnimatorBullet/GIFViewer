<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="label4.Text" xml:space="preserve">
    <value>You can use special tokens to get values and use in filename.
{%name}: Original .gif filename (without extension).
{%frame} : Gets the iterator (or the current frame being exported).
{%h} and {%m} and {%s} : Gets the current time, in hours, minutes and seconds.</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAwMAAAAAAAAAAAAAAAAAAAAAAAAAAwMGhoaDAAAAAAA
        AAAAAAAAAAAAAAAAAAwMGhoaDAAAAAAAAAAAAAAAAAAAAAAADBoaGBkZDAAAAAAAAAAAAAsLCwsLCwwM
        GhgYGQwMAAAAAAAAAAAAAAsLCwsLCwwMGhgYGQwMAAAAAAAAAAAACxYWFhYWFgsLGBkZDAAAAAAAAAAA
        AAsLFA8PDw8PDxQUCwwMAAAAAAAAAAAAAAsLFA8PDw8PDxQUCwwMAAAAAAAAAAAACxMTDQ0NDQ0NDQ0N
        EwsLAAAAAAAAAAAACxQUDg4ODg4ODg4OFAsLAAAAAAAAAAAACxQUDg4ODg4ODg4OFAsLAAAAAAAAAAAA
        CxUVEBAQEBAQEBAQFQsLAAAAAAAAAAAACxUVERERERERERERFQsLAAAAAAAAAAAACxUVERERERERERER
        FQsLAAAAAAAAAAAAAAsLFxISEhISEhcXCwAAAAAAAAAAAAAAAAAACxcXFxcXFwsLAAAAAAAAAAAAAAAA
        AAAACxcXFxcXFwsLAAAAAAAAAAAAAAAAAAAAAAsLCwsLCwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP///wD///8A////AP//jwD//gcA//4HAP/8
        BwD8AA8A/AAPAPgAPwDgAH8A4AB/AMAAfwDAAH8AwAB/AMAAfwDAAH8AwAB/AOAB/wD4A/8A+AP/APwP
        /wD///8A////ACgAAAAgAAAAQAAAAAEACAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAACA
        AAAAgIAAgAAAAIAAgACAgAAAwMDAAMDcwADwyqYAAAAAALqUXQCqqqoA7b+PAO/EkgDwxpQA88yYAPjW
        oQD836gA9+TPAPjm0QD66dMA/O7YAP7x2gDj4+MA7OzsAPj4+ADotU0AGHhOAAy2XADstU0AuB0AAKi1
        TQAYeE4ADLZcAKy1TQD4HQAAaLVNABh4TgAMtlwAbLVNADgeAAAotU0AGHhOAAy2XAAstU0AeB4AAA4o
        QAA2KEAAzLVcAD4oQAAstU0AaLVNAPC0TQAYeE4ADLZcAPS0TQCwHgAADihAADYoQADMtVwAPihAAPS0
        TQAotU0AKLVNAPC0TQAAAAAAdPIQAFMrQAD0tE0AOT9AAP+N8QDqjfEAkPISAAABAAB88hAAgVFLAJDy
        EgCg9hIA4ndLAETSTAAIAAAAAAEAALqUXQCqqqoA7b+PAO/EkgDwxpQA88yYAPjWoQD836gA9+TPAPjm
        0QD459EA+unTAPzt1wD87tgA/vHaAP/03ADj4+MA7OzsAPj4+AD5+fkA////APX19QD4+PgA+/v7AP39
        /QD///8ABKv/AAaw/wAHtP8ACrb/AAu5/wATuP8AGL7/ADKh/wAzpP8ALb/yAEyj/wBipvYAYqj2AGOs
        9gBlr/YAa6v2AGGo/wBir/8AY7H/AGWz/wBltv8AZrv/AG66/wBuvP8AeLP3AHm19wB6tvcAern3AHu6
        9wB8v/cAcbP/AHG0/wB4tf8Acrn/AHq6/wB6vP8AEcH/ABrC/wAcxP8AK8b/AGDE/wBpx/8AfcL3AHzB
        /wB8w/8AZtH/AGnX/wBw1v8Acdf/AIS/+AD///8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACkoKAAgICAAAAA/wAA/wAAAP//AP8AAAD/AP8A//8AAP///wBLVWwAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAwMDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMDAwM
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMDBoaGhoMDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwM
        GhoaGgwMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwMGhoYGBkZDAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        DAwaGhgYGRkMDAAAAAAAAAAAAAAAAAsLCwsLCwsLDAwaGhgYGRkMDAAAAAAAAAAAAAAAAAAACwsLCwsL
        CwsMDBoaGBgZGQwMAAAAAAAAAAAAAAAACwsWFhYWFhYWFgsLGBgZGQwMAAAAAAAAAAAAAAAAAAALCxYW
        FhYWFhYWCwsYGBkZDAwAAAAAAAAAAAAAAAALCxQUDw8PDw8PDw8UFAsLDAwAAAAAAAAAAAAAAAAAAAsL
        FBQPDw8PDw8PDxQUCwsMDAAAAAAAAAAAAAAAAAsLExMNDQ0NDQ0NDQ0NDQ0TEwsLAAAAAAAAAAAAAAAA
        CwsTEw0NDQ0NDQ0NDQ0NDRMTCwsAAAAAAAAAAAAAAAALCxQUDg4ODg4ODg4ODg4OFBQLCwAAAAAAAAAA
        AAAAAAsLFBQODg4ODg4ODg4ODg4UFAsLAAAAAAAAAAAAAAAACwsVFRAQEBAQEBAQEBAQEBUVCwsAAAAA
        AAAAAAAAAAALCxUVEBAQEBAQEBAQEBAQFRULCwAAAAAAAAAAAAAAAAsLFRUREREREREREREREREVFQsL
        AAAAAAAAAAAAAAAACwsVFRERERERERERERERERUVCwsAAAAAAAAAAAAAAAAAAAsLFxcSEhISEhISEhcX
        CwsAAAAAAAAAAAAAAAAAAAAACwsXFxISEhISEhISFxcLCwAAAAAAAAAAAAAAAAAAAAAAAAsLFxcXFxcX
        FxcLCwAAAAAAAAAAAAAAAAAAAAAAAAAACwsXFxcXFxcXFwsLAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsL
        CwsLCwsLAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACwsLCwsLCwsAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//
        //////////////////////w////8P///8A////AP///AD///wA//AAA//wAAP/wAAP/8AAD/8AAD//AA
        A//AAAP/wAAD/8AAA//AAAP/wAAD/8AAA//AAAP/wAAD//AAD//wAA///AA///wAP///AP///wD/////
        ////////KAAAADAAAABgAAAAAQAIAAAAAAAACQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAIAAAACA
        gACAAAAAgACAAICAAADAwMAAwNzAAPDKpgAAAAAAupRdAKqqqgDtv48A78SSAPDGlADzzJgA+NahAPzf
        qAD35M8A+ObRAPrp0wD87tgA/vHaAOPj4wDs7OwA+Pj4AOi1TQAYeE4ADLZcAOy1TQC4HQAAqLVNABh4
        TgAMtlwArLVNAPgdAABotU0AGHhOAAy2XABstU0AOB4AACi1TQAYeE4ADLZcACy1TQB4HgAADihAADYo
        QADMtVwAPihAACy1TQBotU0A8LRNABh4TgAMtlwA9LRNALAeAAAOKEAANihAAMy1XAA+KEAA9LRNACi1
        TQAotU0A8LRNAAAAAAB08hAAUytAAPS0TQA5P0AA/43xAOqN8QCQ8hIAAAEAAHzyEACBUUsAkPISAKD2
        EgDid0sARNJMAAgAAAAAAQAAupRdAKqqqgDtv48A78SSAPDGlADzzJgA+NahAPzfqAD35M8A+ObRAPjn
        0QD66dMA/O3XAPzu2AD+8doA//TcAOPj4wDs7OwA+Pj4APn5+QD///8A9fX1APj4+AD7+/sA/f39AP//
        /wAEq/8ABrD/AAe0/wAKtv8AC7n/ABO4/wAYvv8AMqH/ADOk/wAtv/IATKP/AGKm9gBiqPYAY6z2AGWv
        9gBrq/YAYaj/AGKv/wBjsf8AZbP/AGW2/wBmu/8Abrr/AG68/wB4s/cAebX3AHq29wB6ufcAe7r3AHy/
        9wBxs/8AcbT/AHi1/wByuf8Aerr/AHq8/wARwf8AGsL/ABzE/wArxv8AYMT/AGnH/wB9wvcAfMH/AHzD
        /wBm0f8Aadf/AHDW/wBx1/8AhL/4AP///wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAKSgoACAgIAAAAD/AAD/AAAA//8A/wAAAP8A/wD//wAA////AEtVbAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAMDAwMDAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAM
        DAwMDAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMDAwMDAwAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMDAwaGhoaGhoMDAwAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAMDAwaGhoaGhoMDAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAMDAwaGhoaGhoMDAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMDAwaGhoY
        GBgZGRkMDAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMDAwaGhoYGBgZGRkMDAwAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMDAwaGhoYGBgZGRkMDAwAAAAAAAAAAAAAAAAAAAAA
        AAALCwsLCwsLCwsLCwsMDAwaGhoYGBgZGRkMDAwAAAAAAAAAAAAAAAAAAAAAAAAAAAALCwsLCwsLCwsL
        CwsMDAwaGhoYGBgZGRkMDAwAAAAAAAAAAAAAAAAAAAAAAAAAAAALCwsLCwsLCwsLCwsMDAwaGhoYGBgZ
        GRkMDAwAAAAAAAAAAAAAAAAAAAAAAAALCwsWFhYWFhYWFhYWFhYLCwsYGBgZGRkMDAwAAAAAAAAAAAAA
        AAAAAAAAAAAAAAALCwsWFhYWFhYWFhYWFhYLCwsYGBgZGRkMDAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAL
        CwsWFhYWFhYWFhYWFhYLCwsYGBgZGRkMDAwAAAAAAAAAAAAAAAAAAAAAAAALCwsUFBQPDw8PDw8PDw8P
        Dw8UFBQLCwsMDAwAAAAAAAAAAAAAAAAAAAAAAAAAAAALCwsUFBQPDw8PDw8PDw8PDw8UFBQLCwsMDAwA
        AAAAAAAAAAAAAAAAAAAAAAAAAAALCwsUFBQPDw8PDw8PDw8PDw8UFBQLCwsMDAwAAAAAAAAAAAAAAAAA
        AAAAAAALCwsTExMNDQ0NDQ0NDQ0NDQ0NDQ0NDQ0TExMLCwsAAAAAAAAAAAAAAAAAAAAAAAALCwsTExMN
        DQ0NDQ0NDQ0NDQ0NDQ0NDQ0TExMLCwsAAAAAAAAAAAAAAAAAAAAAAAALCwsTExMNDQ0NDQ0NDQ0NDQ0N
        DQ0NDQ0TExMLCwsAAAAAAAAAAAAAAAAAAAAAAAALCwsUFBQODg4ODg4ODg4ODg4ODg4ODg4UFBQLCwsA
        AAAAAAAAAAAAAAAAAAAAAAALCwsUFBQODg4ODg4ODg4ODg4ODg4ODg4UFBQLCwsAAAAAAAAAAAAAAAAA
        AAAAAAALCwsUFBQODg4ODg4ODg4ODg4ODg4ODg4UFBQLCwsAAAAAAAAAAAAAAAAAAAAAAAALCwsVFRUQ
        EBAQEBAQEBAQEBAQEBAQEBAVFRULCwsAAAAAAAAAAAAAAAAAAAAAAAALCwsVFRUQEBAQEBAQEBAQEBAQ
        EBAQEBAVFRULCwsAAAAAAAAAAAAAAAAAAAAAAAALCwsVFRUQEBAQEBAQEBAQEBAQEBAQEBAVFRULCwsA
        AAAAAAAAAAAAAAAAAAAAAAALCwsVFRUREREREREREREREREREREREREVFRULCwsAAAAAAAAAAAAAAAAA
        AAAAAAALCwsVFRUREREREREREREREREREREREREVFRULCwsAAAAAAAAAAAAAAAAAAAAAAAALCwsVFRUR
        EREREREREREREREREREREREVFRULCwsAAAAAAAAAAAAAAAAAAAAAAAAAAAALCwsXFxcSEhISEhISEhIS
        EhIXFxcLCwsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALCwsXFxcSEhISEhISEhISEhIXFxcLCwsAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAALCwsXFxcSEhISEhISEhISEhIXFxcLCwsAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAALCwsXFxcXFxcXFxcXFxcLCwsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAL
        CwsXFxcXFxcXFxcXFxcLCwsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALCwsXFxcXFxcXFxcX
        FxcLCwsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALCwsLCwsLCwsLCwsAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALCwsLCwsLCwsLCwsAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAALCwsLCwsLCwsLCwsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAD///////8AAP///////wAA////////AAD///////8AAP///////wAA////////
        AAD/////gf8AAP////+B/wAA/////4H/AAD////8AD8AAP////wAPwAA/////AA/AAD////gAD8AAP//
        /+AAPwAA////4AA/AAD/8AAAAf8AAP/wAAAB/wAA//AAAAH/AAD/gAAAD/8AAP+AAAAP/wAA/4AAAA//
        AAD8AAAAf/8AAPwAAAB//wAA/AAAAH//AADgAAAAf/8AAOAAAAB//wAA4AAAAH//AADgAAAAf/8AAOAA
        AAB//wAA4AAAAH//AADgAAAAf/8AAOAAAAB//wAA4AAAAH//AADgAAAAf/8AAOAAAAB//wAA4AAAAH//
        AAD8AAAD//8AAPwAAAP//wAA/AAAA///AAD/gAAf//8AAP+AAB///wAA/4AAH///AAD/8AD///8AAP/w
        AP///wAA//AA////AAD///////8AAP///////wAA////////AAA=
</value>
  </data>
</root>